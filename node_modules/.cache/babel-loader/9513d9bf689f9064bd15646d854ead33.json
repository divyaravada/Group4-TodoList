{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Desktop\\\\react\\\\Group4-TodoList\\\\src\\\\Divya\\\\DivyaTodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./DivyaTodoList.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DivyaTodoList = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  const [todoEditing, setTodoEditing] = useState(null);\n  const [editingText, setEditingText] = useState(\"\");\n  useEffect(() => {\n    const json = localStorage.getItem(\"todos\");\n    const loadedTodos = JSON.parse(json);\n\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n  useEffect(() => {\n    const json = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", json);\n  }, [todos]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo,\n      completed: false\n    };\n    setTodos([...todos].concat(newTodo));\n    setTodo(\"\");\n  }\n\n  function deleteTodo(id) {\n    let updatedTodos = [...todos].filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  }\n\n  function toggleComplete(id) {\n    let updatedTodos = [...todos].map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n\n  function submitEdits(id) {\n    const updatedTodos = [...todos].map(todo => {\n      if (todo.id === id) {\n        todo.text = editingText;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n    setTodoEditing(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setTodo(e.target.value),\n        value: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-warning\",\n        type: \"submit\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"completed\",\n          checked: todo.completed,\n          onChange: () => toggleComplete(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), todo.id === todoEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setEditingText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-success todo-actions\",\n        children: [todo.id === todoEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success\",\n          onClick: () => submitEdits(todo.id),\n          children: \"Submit Edits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-primary\",\n          onClick: () => setTodoEditing(todo.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-danger\",\n          onClick: () => deleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DivyaTodoList, \"PI0tCoyOhxfRakLErWvWJFyadEU=\");\n\n_c = DivyaTodoList;\nexport default DivyaTodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DivyaTodoList\");","map":{"version":3,"sources":["C:/Users/divya/Desktop/react/Group4-TodoList/src/Divya/DivyaTodoList.js"],"names":["React","useState","useEffect","DivyaTodoList","todos","setTodos","todo","setTodo","todoEditing","setTodoEditing","editingText","setEditingText","json","localStorage","getItem","loadedTodos","JSON","parse","stringify","setItem","handleSubmit","e","preventDefault","newTodo","id","Date","getTime","text","completed","concat","deleteTodo","updatedTodos","filter","toggleComplete","map","submitEdits","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./DivyaTodoList.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst DivyaTodoList = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [todo, setTodo] = useState(\"\");\r\n  const [todoEditing, setTodoEditing] = useState(null);\r\n  const [editingText, setEditingText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const json = localStorage.getItem(\"todos\");\r\n    const loadedTodos = JSON.parse(json);\r\n    if (loadedTodos) {\r\n      setTodos(loadedTodos);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const json = JSON.stringify(todos);\r\n    localStorage.setItem(\"todos\", json);\r\n  }, [todos]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTodo = {\r\n      id: new Date().getTime(),\r\n      text: todo,\r\n      completed: false,\r\n    };\r\n    setTodos([...todos].concat(newTodo));\r\n    setTodo(\"\");\r\n  }\r\n\r\n  function deleteTodo(id) {\r\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id);\r\n    setTodos(updatedTodos);\r\n  }\r\n\r\n  function toggleComplete(id) {\r\n    let updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.completed = !todo.completed;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  }\r\n\r\n  function submitEdits(id) {\r\n    const updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.text = editingText;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n    setTodoEditing(null);\r\n  }\r\n\r\n  return (\r\n    <div id=\"todo-list\">\r\n      <h1>Todo List</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setTodo(e.target.value)}\r\n          value={todo}\r\n        />\r\n        <button className=\"btn btn-outline-warning\" type=\"submit\">\r\n          Add Todo\r\n        </button>\r\n      </form>\r\n      {todos.map((todo) => (\r\n        <div key={todo.id} className=\"todo\">\r\n          <div className=\"todo-text\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"completed\"\r\n              checked={todo.completed}\r\n              onChange={() => toggleComplete(todo.id)}\r\n            />\r\n            {todo.id === todoEditing ? (\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setEditingText(e.target.value)}\r\n              />\r\n            ) : (\r\n              <div>{todo.text}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"border-success todo-actions\">\r\n            {todo.id === todoEditing ? (\r\n              <button\r\n                className=\"btn btn-outline-success\"\r\n                onClick={() => submitEdits(todo.id)}\r\n              >\r\n                Submit Edits\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-outline-primary\"\r\n                onClick={() => setTodoEditing(todo.id)}\r\n              >\r\n                Edit\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              className=\"btn btn-outline-danger\"\r\n              onClick={() => deleteTodo(todo.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DivyaTodoList;\r\n"]},"metadata":{},"sourceType":"module"}